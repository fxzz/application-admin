<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.nexacro.orderBoard.mapper.UiadapterBoardMapper">
	
	 <select id="selectCountTodayAccount" resultType="Map">
        SELECT COUNT(*) as count
        FROM account
        WHERE DATE(createdat) = DATE(NOW())
    </select>
	
	
	<update id="deleteCommunity" parameterType="Map">
	UPDATE community
    SET deleted = 1
    WHERE communityId = #{TEST}
	</update>
	
	<select id="selectCommentList" parameterType="Map" resultType="Map">
	  SELECT
        co.commentId AS id,
        c.title,
        co.content,
        a.nickname,
        co.createdAt as created,
        COUNT(comment_report.commentId) AS count
        FROM comment co
        INNER JOIN community c ON co.communityId = c.communityId
        INNER JOIN account a ON co.accountId = a.accountId
        LEFT OUTER JOIN comment_report_history comment_report ON co.commentId = comment_report.commentId
        where co.deleted is null
        GROUP BY co.commentId, c.title, co.content, a.nickname, co.createdat
       <if test="1 == TEST">
        ORDER BY co.createdAt DESC
        </if>
         <if test="2 == TEST">
        ORDER BY count DESC, co.createdAt DESC
        </if>
	</select>
	
	<select id="selectCommunityList" parameterType="Map" resultType="Map">
	 SELECT
        c.communityId AS id, 
        c.title,
        c.content,
        a.nickname,
        c.createdAt as created,
        COUNT(community_report.communityId) AS count
        FROM community c
        INNER JOIN account a ON c.accountId = a.accountId
        LEFT OUTER JOIN community_report_history community_report ON c.communityId = community_report.communityId
        where c.deleted is null
        GROUP BY c.communityId, a.nickname
        <if test="1 == TEST">
        ORDER BY c.createdAt DESC
        </if>
         <if test="2 == TEST">
        ORDER BY count DESC, c.createdAt DESC
        </if>
	</select>
	
	
	
	
    <!--  POJO -->
     <select id="retrieve_datalist" parameterType="com.nexacro.orderBoard.object.Board" resultType="com.nexacro.orderBoard.object.Board">
            select title 
                 , regId 
                 , regDate 
                 , postId 
                 , contents 
                 , communityId
                 , hitCount
             from tbl_board
             where 1=1
            <if test="title != null">
                and title like '%' || #{title} || '%'
            </if>
    </select>
    
    <insert id="insert_board" parameterType="com.nexacro.orderBoard.object.Board">
            insert into tbl_board(title, regId, contents, communityId) values (#{title}, #{regId}, #{contents}, #{communityId} )
    </insert>
    
      <update id="update_board" parameterType="com.nexacro.orderBoard.object.Board">
            update tbl_board 
               set title       = #{title}
                 , regId       = #{regId}
                 , contents    = #{contents}
                 , communityId = #{communityId}
            where postId=#{postId}
    </update>
    
    <delete id="delete_board" parameterType="com.nexacro.orderBoard.object.Board">
            delete from tbl_board where postId = #{postId}
    </delete>
    
    <!--  MAP -->
    <select id="retrieve_datalist_map" parameterType="java.util.Map" resultType="java.util.Map">
            select title 
                 , regId 
                 , regDate 
                 , postId 
                 , contents 
                 , communityId
                 , hitCount
             from tbl_board
            where 1=1
            <if test="title != null">
                and title like '%' || #{title} || '%'
            </if>
    </select>
    
    <insert id="insert_board_map" parameterType="java.util.Map">
            insert into tbl_board (title, regId, contents,communityId) values (#{title}, #{regId}, #{contents}, #{communityId} )
    </insert>
    
      <update id="update_board_map" parameterType="java.util.Map">
            update tbl_board 
               set title       = #{title}
                 , regId       = #{regId}
                 , contents    = #{contents}
                 , communityId = #{communityId}
             where postId=#{postId}
    </update>
    
    <delete id="delete_board_map" parameterType="java.util.Map">
            delete from tbl_board where postId=#{postId}
    </delete>
    
    
    <select id="selectUserCount"  resultType="Integer">
            SELECT COUNT(*)
              FROM TB_USER
    </select>
</mapper>
